name: Terraform AWS Provisioning

on:
    push:
      branches:
        - '*'         # Matches every branch
        - '!master'   # Excludes master
    pull_request:
      branches:
        - master

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref != 'refs/heads/master' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      
    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan

  apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve



# name: Terraform AWS Provisioning

# on:
#     push:
#       branches:
#         - '*'         # Matches every branch
#         - '!master'   # Excludes master
#     pull_request:
#       branches:
#         - master

# jobs:
#   plan:
#     name: 'Terraform Plan'
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref != 'refs/heads/master' || github.event_name == 'pull_request'
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: 1.0.0

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Format
#       run: terraform fmt -check

#     - name: Terraform Plan
#       run: terraform plan -out=tfplan
      
#     - name: Upload Terraform Plan
#       uses: actions/upload-artifact@v3
#       with:
#         name: tfplan
#         path: tfplan

#   apply:
#     name: 'Terraform Apply'
#     runs-on: ubuntu-latest
#     needs: plan
#     if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: 1.0.0

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Apply
#       run: terraform apply -auto-approve




# name: Terraform AWS Provisioning

# on:
#   push:
#     branches: [ "**"]
#   pull_request:
#     branches: [ master ]
# defaults:
#   run:
#     shell: bash

# jobs:
#   provisioning:
#     name: 'Terraform'
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         terraform_version: 1.0.0

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Terraform Init
#       run: terraform init -upgrade

#     - name: Terraform Format Check
#       run: terraform fmt -check -recursive

#     - name: Terraform Validate
#       run: terraform validate

#     - name: Terraform Plan
#       run: terraform plan # -out=tfplan

#     - name: Terraform Apply
#       if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#       run: terraform apply -auto-approve