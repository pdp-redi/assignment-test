name: Terraform AWS Provisioning

on:
  push:
    branches: ['*']
  pull_request:
    branches: [master]

defaults:
  run:
    working-directory: ./terraform

permissions:
  contents: read

jobs:
  infra-provisioning:
    name: Terraform AWS Provisioning
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Terraform Init, Format, Validate, Plan and Apply
      run: |
        terraform init -upgrade
        terraform fmt -check -recursive
        terraform validate
        terraform plan -out=tfplan

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: ./terraform/tfplan
    - if: github.ref == 'refs/heads/master'
      run: terraform apply -auto-approve tfplan




# name: Terraform AWS Provisioning

# on:
#   push:
#     branches:
#       - '*'         # Matches every branch
#   pull_request:
#     branches:
#       - master
# defaults:
#   run:
#     shell: bash
#     working-directory: ./terraform

# jobs:
#   terraform:
#     name: Terraform Init, Format, Validate, Plan and Apply
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4 # Node.js 20 compatible

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v3 # Node.js 20 compatible
#       with:
#         terraform_version: 1.0.0

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v3 # Node.js 16 for now, GitHub will force Node.js 20 soon
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Terraform Init
#       run: terraform init -upgrade

#     - name: Terraform Format Check
#       run: terraform fmt -check -recursive
    
#     - name: Terraform Validate
#       run: terraform validate
    
#     - name: Terraform Plan
#       run: terraform plan -out=tfplan
    
#     - name: Upload Terraform Plan
#       uses: actions/upload-artifact@v3
#       with:
#         name: tfplan
#         path: ./terraform

#     # Apply Step for master branch
#     - name: Terraform Apply
#       if: github.ref == 'refs/heads/master' # Apply runs only on master
#       run: terraform apply -auto-approve tfplan
